import { MessageTypes } from 'ircv3';
import type { CheermoteList } from 'twitch';
import { ChatUser } from '../ChatUser';
import type { ParsedMessagePart } from '../Toolkit/EmoteTools';
/**
 * An IRC PRIVMSG, with easy accessors for commonly used data from its tags.
 */
export declare class TwitchPrivateMessage extends MessageTypes.Commands.PrivateMessage {
    /**
     * The ID of the message.
     */
    get id(): string;
    /**
     * Info about the user that send the message, like their user ID and their status in the current channel.
     */
    get userInfo(): ChatUser;
    /**
     * The ID of the channel the message is in.
     */
    get channelId(): string | null;
    /**
     * Whether the message is a cheer.
     */
    get isCheer(): boolean;
    /**
     * The number of bits cheered with the message.
     */
    get bits(): number;
    /**
     * The number of bits cheered with the message.
     *
     * @deprecated Use {@TwitchPrivateMessage#bits} instead.
     */
    get totalBits(): number;
    /**
     * The offsets of emote usages in the message.
     */
    get emoteOffsets(): Map<string, string[]>;
    /**
     * Parses the message, separating text from emote usages.
     */
    parseEmotes(): ParsedMessagePart[];
    /**
     * Parses the message, separating text from emote usages and cheers.
     *
     * @param cheermotes A list of cheermotes
     */
    parseEmotesAndBits(cheermotes: CheermoteList): ParsedMessagePart[];
}
